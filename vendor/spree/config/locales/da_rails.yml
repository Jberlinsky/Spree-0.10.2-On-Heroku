da:
  date:
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%d-%m-%Y"
      short: "%d. %b"
      long: "%d. %B, %Y"
      
    day_names: [Søndag, Mandag, Tirsdag, Onsdag, Torsdag, Fredag, Lørdag]
    abbr_day_names: [Søn, Man, Tir, Ons, Tor, Fre, Lør]
      
    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names: [~, Januar, Februar, Marts, April, Maj, Juni, Juli, August, September, Oktober, November, December]
    abbr_month_names: [~, Jan, Feb, Mar, Apr, Maj, Jun, Jul, Aug, Sep, Okt, Nov, Dec]
    # Used in date_select and datime_select.
    order: [ :day, :month, :year ]

  time:
    formats:
      default: "%a, %d %b %Y %H:%M:%S %z"
      short: "%d %b %H:%M"
      long: "%B %d, %Y %H:%M"
    am: ""
    pm: ""
      
# Used in array.to_sentence.
  support:
    array:
      words_connector: ", "
      two_words_connector: " og "
      last_word_connector: ", og "

  number:
    # Used in number_with_delimiter()
    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
    format:
      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
      separator: ","
      # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
      delimiter: "."
      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
      precision: 2
  
    # Used in number_to_currency()
    currency:
      format:
        # Where is the currency sign? %u is the currency unit, %n the number (default: Â£5.00)
        format: "%n %u"
        unit: "kr"
        # These three are to override number.format and are optional
        separator: ","
        delimiter: "."
        precision: 2
  
    # Used in number_to_percentage()
    percentage:
      format:
        # These three are to override number.format and are optional
        # separator: 
        delimiter: ""
        # precision: 
  
    # Used in number_to_precision()
    precision:
      format:
        # These three are to override number.format and are optional
        # separator:
        delimiter: ""
        # precision:
  
    # Used in number_to_human_size()
    human:
      format:
        # These three are to override number.format and are optional
        # separator: 
        delimiter: ""
        precision: 1
      storage_units:
        # Storage units output formatting.
        # %u is the storage unit, %n is the number (default: 2 MB)
        format: "%n %u"
        units:
          byte:
            one:   "Byte"
            other: "Bytes"
          kb: "kB"
          mb: "MB"
          gb: "GB"
          tb: "TB"
  
  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
  datetime:
    distance_in_words:
      half_a_minute: "et havlt minut"
      less_than_x_seconds:
        one:   "mindre end et sekund"
        other: "mindre end {{count}} sekunder"
      x_seconds:
        one:   "1 sekund"
        other: "{{count}} sekunder"
      less_than_x_minutes:
        one:   "mindre end et minut"
        other: "mindre end {{count}} minutter"
      x_minutes:
        one:   "1 minut"
        other: "{{count}} minutter"
      about_x_hours:
        one:   "ca. 1 time"
        other: "ca. {{count}} timer"
      x_days:
        one:   "1 dag"
        other: "{{count}} dage"
      about_x_months:
        one:   "ca. 1 måned"
        other: "ca. {{count}} måneder"
      x_months:
        one:   "1 måned"
        other: "{{count}} måneder"
      about_x_years:
        one:   "ca. 1 år"
        other: "ca. {{count}} år"
      over_x_years:
        one:   "mere end 1 år"
        other: "mere end {{count}} år"
    prompts:
      year:   "År"
      month:  "Måned"
      day:    "Dag"
      hour:   "Timer"
      minute: "Minutter"
      second: "Sekunder"

  activerecord:
    errors:
      template:
        header:
          one:    "1 fejl forhindre denne {{model}} i at blive gemt"
          other:  "{{count}} fejl forhindre denne {{model}} i at blive gemt"
        # The variable :count is also available
        body: "Der er problemer med følgende felter:"
  
      # The values :model, :attribute and :value are always available for interpolation
      # The value :count is available when applicable. Can be used for pluralization.
      messages:
        inclusion: "er ikke med i listen"
        exclusion: "er reserveret"
        invalid: "kan ikke bruges"
        confirmation: "er ikke ens"
        accepted: "skal accepteres"
        empty: "må ikke være tom"
        blank: "må ikke være tom"
        too_long: "er for lang (maximum er {{count}} tegn)"
        too_short: "er for kort (minimum er {{count}} tegn)"
        wrong_length: "har en forkert længde (skal være {{count}} tegn)"
        taken: "er allerede brugt"
        not_a_number: "er ikke et tal"
        greater_than: "skal være større end {{count}}"
        greater_than_or_equal_to: "skal være større end eller lig med {{count}}"
        equal_to: "skal være lig med {{count}}"
        less_than: "skal være mindre end {{count}}"
        less_than_or_equal_to: "skal være mindre end eller lig med {{count}}"
        odd: "skal være ulige"
        even: "skal være lige"
        # Append your own errors here or at the model/attributes scope.
    
      # You can define own errors for models or model attributes.
      # The values :model, :attribute and :value are always available for interpolation.
      #
      # For example,
      #   models:
      #     user:
      #       blank: "This is a custom blank message for {{model}}: {{attribute}}"
      #       attributes:
      #         login:
      #           blank: "This is a custom blank message for User login"
      # Will define custom blank validation message for User model and 
      # custom blank validation message for login attribute of User model.
      #models:
    
    # Translate model names. Used in Model.human_name().
    #models:
      # For example,
      #   user: "Dude"
      # will translate User model name to "Dude"
    models:
        user: "Bruger"

    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
    #attributes:
      # For example,
      #   user:
      #     login: "Handle"
      # will translate User attribute "login" as "Handle"
    
    