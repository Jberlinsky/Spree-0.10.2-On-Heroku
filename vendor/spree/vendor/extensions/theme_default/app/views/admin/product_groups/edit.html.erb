<% render 'admin/shared/product_sub_menu' %>

<h1><%= t('editing_product_group') %></h1>

<fieldset id="product_group_forms_container">

  <% form_for(@product_group, :url => object_url, :html => { :id => 'product-group-form', :method => :put, 'data-remote' => true }) do |f| %>

      <% f.field_container :name do %>
        <%= f.label :name, t("name") %><br />
        <%= f.text_field :name %>
        <%= f.error_message_on :name %>
      <% end %>

      <% f.field_container :order_scope do %>
        <%= f.label :order_scope, t("sort_ordering") %><br />
        <%= f.select(:order_scope, Scopes::Product::ORDERING.collect{|p| [ t(:name, :scope =>[:product_scopes, :scopes, p]), p.to_s ] }) %>
      <% end %>

      <table id="product_scopes">
        <%= render :partial => 'product_scope', :collection => @product_group.product_scopes.reject {|s| s.is_ordering? } %>
      </table>

    <%=  button t("update") %>

  <% end %>


  <% form_tag(admin_product_group_product_scopes_path(@product_group), 'data-remote' => true, :id => 'new_product_group_form') do |f| %>
    <% 
    options = 
    grouped_options_for_select(
    Scopes::Product::SCOPES.map do |group_name, scopes|  
      [ 
        t(:name, :scope => [:product_scopes, :groups, group_name]), 
        scopes.keys.map do |scope_name|
          [ t(:name, :scope => [:product_scopes, :scopes, scope_name]), scope_name]
        end
      ]
    end
    ) 
    %>
    <p>
      <label for="product_scope_name"><%= t('add_scope') %></label>
      <%= select_tag("product_scope[name]", options) %>
      <input type="submit" value="<%= t('add') %>" />
    </p>
  <% end %>


</fieldset>


<fieldset id="preview_container">
  <%= render 'preview' %>
</fieldset>
